{"ast":null,"code":"var _jsxFileName = \"/Users/thatchampion/Desktop/Ironhack/Project4/frontend/src/components/health.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport PerfectWeight from \"./weight\";\nimport Slider from \"react-rangeslider\";\n\nclass Health extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      gender: \"\",\n      height: \"\",\n      weight: \"79\",\n      age: \"\",\n      perfectWeight: [],\n      showGraph: false\n    };\n\n    this.handleChangeHorizontal = value => {\n      this.setState({\n        horizontal: value\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.getRatingData = () => {\n      var _this$state$perfectWe, _this$state$perfectWe2, _this$state$perfectWe3, _this$state$perfectWe4, _this$state$perfectWe5, _this$state$perfectWe6, _this$state$perfectWe7, _this$state$perfectWe8;\n\n      let data = [{\n        name: \"Devine\",\n        weight: (_this$state$perfectWe = this.state.perfectWeight) === null || _this$state$perfectWe === void 0 ? void 0 : (_this$state$perfectWe2 = _this$state$perfectWe.Devine) === null || _this$state$perfectWe2 === void 0 ? void 0 : _this$state$perfectWe2.toFixed(1)\n      }, {\n        name: \"Hamwi\",\n        weight: (_this$state$perfectWe3 = this.state.perfectWeight) === null || _this$state$perfectWe3 === void 0 ? void 0 : (_this$state$perfectWe4 = _this$state$perfectWe3.Hamwi) === null || _this$state$perfectWe4 === void 0 ? void 0 : _this$state$perfectWe4.toFixed(1)\n      }, {\n        name: \"My weight\",\n        weight: this.state.weight\n      }, {\n        name: \"Miller\",\n        weight: (_this$state$perfectWe5 = this.state.perfectWeight) === null || _this$state$perfectWe5 === void 0 ? void 0 : (_this$state$perfectWe6 = _this$state$perfectWe5.Miller) === null || _this$state$perfectWe6 === void 0 ? void 0 : _this$state$perfectWe6.toFixed(1)\n      }, {\n        name: \"Robinson\",\n        weight: (_this$state$perfectWe7 = this.state.perfectWeight) === null || _this$state$perfectWe7 === void 0 ? void 0 : (_this$state$perfectWe8 = _this$state$perfectWe7.Robinson) === null || _this$state$perfectWe8 === void 0 ? void 0 : _this$state$perfectWe8.toFixed(1)\n      }];\n      return data;\n    };\n\n    this.getInfo = async e => {\n      e.preventDefault(); // let res1 = await axios({\n      //   method: \"GET\",\n      //   url: \"https://fitness-calculator.p.rapidapi.com/bmi\",\n      //   headers: {\n      //     \"content-type\": \"application/octet-stream\",\n      //     \"x-rapidapi-host\": \"fitness-calculator.p.rapidapi.com\",\n      //     \"x-rapidapi-key\": \"e14d7b4a61mshaf4d68517150093p1d2b11jsnaa5e4d29c6bc\",\n      //     useQueryString: true\n      //   },\n      //   params: {\n      //     age: this.state.age,\n      //     height: this.state.height,\n      //     weight: this.state.weight\n      //   }\n      // });\n\n      let res2 = await axios({\n        method: \"GET\",\n        url: \"https://fitness-calculator.p.rapidapi.com/idealweight\",\n        headers: {\n          \"content-type\": \"application/octet-stream\",\n          \"x-rapidapi-host\": \"fitness-calculator.p.rapidapi.com\",\n          \"x-rapidapi-key\": \"e14d7b4a61mshaf4d68517150093p1d2b11jsnaa5e4d29c6bc\",\n          useQueryString: true\n        },\n        params: {\n          weight: this.state.weight,\n          gender: this.state.gender,\n          height: this.state.height\n        }\n      });\n      console.log(res2.data);\n      this.setState({\n        perfectWeight: res2.data,\n        showGraph: true\n      });\n    };\n  }\n\n  render() {\n    const {\n      horizontal\n    } = this.state;\n    const horizontalLabels = {\n      0: \"Short\",\n      50: \"Medium\",\n      100: \"Tall\"\n    };\n\n    const formatcm = value => value + \" cm\";\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }, \"Ideal Weight Calculator\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }, \"If you are really concerned about your health or your looks and want to know how much you should weigh, this ideal weight calculator is the tool for you. It will help you determine your ideal body weight based on your height and sex. Read on to learn the different formulas for calculating your IBW (ideal body weight) and how to interpret the results\"), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form1\",\n      onSubmit: this.getInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"sex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, \"Gender\"), /*#__PURE__*/React.createElement(\"select\", {\n      onChange: this.handleChange,\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      name: \"female\",\n      value: \"female\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }\n    }, \"Female\"), /*#__PURE__*/React.createElement(\"option\", {\n      name: \"male\",\n      value: \"male\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }\n    }, \"Male\"))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"height\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    }, \"Height\"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"typeinp\",\n      type: \"range\",\n      min: \"100\",\n      max: \"250\",\n      name: \"height\",\n      onChange: this.handleChange,\n      step: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }), this.state.height, \" cm\"), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }\n    }, \"Weight in kg\"), /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: \"89 \",\n      onChange: this.handleChange,\n      type: \"text\",\n      name: \"weight\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }\n    }, \"Age\"), /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: \"25\",\n      onChange: this.handleChange,\n      type: \"text\",\n      name: \"age\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"submit\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }\n    }, \"Calculate\")), this.state.showGraph ? /*#__PURE__*/React.createElement(PerfectWeight, {\n      data: this.getRatingData(),\n      title: \"Perfect weight in kg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }\n    }) : \"\", /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }\n    }, \"Formulas for Finding the Ideal Weight\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }\n    }, \"G. J. Hamwi Formula (1964)\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }\n    }, \"Male: 48.0 kg + 2.7 kg per inch over 5 feet\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }\n    }, \"Female: 45.5 kg + 2.2 kg per inch over 5 feet\"), \" Invented for medicinal dosage purposes\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }\n    }, \"B. J. Devine Formula (1974)\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }\n    }, \"Male: 50.0 kg + 2.3 kg per inch over 5 feet\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }\n    }, \"Female: 45.5 kg + 2.3 kg per inch over 5 feet\"), \" Similar to the Hamwi Formula, it was originally intended as a basis for medicinal dosages based on weight and height. Over time, the formula became a universal determinant of IBW\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 13\n      }\n    }, \"D. R. Miller Formula (1983)\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 15\n      }\n    }, \"Male: 56.2 kg + 1.41 kg per inch over 5 feet\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 15\n      }\n    }, \"Female: 53.1 kg + 1.36 kg per inch over 5 feet\"), \" Modification of the Devine Formula\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 13\n      }\n    }, \"J. D. Robinson Formula (1983)\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 15\n      }\n    }, \"Male: 52 kg + 1.9 kg per inch over 5 feet\"), \" \", /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 15\n      }\n    }, \"Female: 49 kg + 1.7 kg per inch over 5 feet\"), \" Modification of the Devine Formula\"))));\n  }\n\n}\n\nexport default Health;","map":{"version":3,"sources":["/Users/thatchampion/Desktop/Ironhack/Project4/frontend/src/components/health.js"],"names":["React","Component","axios","Link","PerfectWeight","Slider","Health","state","gender","height","weight","age","perfectWeight","showGraph","handleChangeHorizontal","value","setState","horizontal","handleChange","event","target","name","getRatingData","data","Devine","toFixed","Hamwi","Miller","Robinson","getInfo","e","preventDefault","res2","method","url","headers","useQueryString","params","console","log","render","horizontalLabels","formatcm"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,aAAP,MAA0B,UAA1B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,MAAMC,MAAN,SAAqBL,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC7BM,KAD6B,GACrB;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,MAAM,EAAE,EAFF;AAGNC,MAAAA,MAAM,EAAE,IAHF;AAINC,MAAAA,GAAG,EAAE,EAJC;AAKNC,MAAAA,aAAa,EAAE,EALT;AAONC,MAAAA,SAAS,EAAE;AAPL,KADqB;;AAAA,SAU7BC,sBAV6B,GAUJC,KAAK,IAAI;AAChC,WAAKC,QAAL,CAAc;AACZC,QAAAA,UAAU,EAAEF;AADA,OAAd;AAGD,KAd4B;;AAAA,SAe7BG,YAf6B,GAedC,KAAK,IAAI;AACtB,WAAKH,QAAL,CAAc;AACZ,SAACG,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAqBF,KAAK,CAACC,MAAN,CAAaL;AADtB,OAAd;AAGD,KAnB4B;;AAAA,SAoB7BO,aApB6B,GAoBb,MAAM;AAAA;;AACpB,UAAIC,IAAI,GAAG,CACT;AACEF,QAAAA,IAAI,EAAE,QADR;AAEEX,QAAAA,MAAM,2BAAE,KAAKH,KAAL,CAAWK,aAAb,oFAAE,sBAA0BY,MAA5B,2DAAE,uBAAkCC,OAAlC,CAA0C,CAA1C;AAFV,OADS,EAKT;AACEJ,QAAAA,IAAI,EAAE,OADR;AAGEX,QAAAA,MAAM,4BAAE,KAAKH,KAAL,CAAWK,aAAb,qFAAE,uBAA0Bc,KAA5B,2DAAE,uBAAiCD,OAAjC,CAAyC,CAAzC;AAHV,OALS,EAUT;AACEJ,QAAAA,IAAI,EAAE,WADR;AAEEX,QAAAA,MAAM,EAAE,KAAKH,KAAL,CAAWG;AAFrB,OAVS,EAcT;AACEW,QAAAA,IAAI,EAAE,QADR;AAGEX,QAAAA,MAAM,4BAAE,KAAKH,KAAL,CAAWK,aAAb,qFAAE,uBAA0Be,MAA5B,2DAAE,uBAAkCF,OAAlC,CAA0C,CAA1C;AAHV,OAdS,EAmBT;AACEJ,QAAAA,IAAI,EAAE,UADR;AAGEX,QAAAA,MAAM,4BAAE,KAAKH,KAAL,CAAWK,aAAb,qFAAE,uBAA0BgB,QAA5B,2DAAE,uBAAoCH,OAApC,CAA4C,CAA5C;AAHV,OAnBS,CAAX;AAyBA,aAAOF,IAAP;AACD,KA/C4B;;AAAA,SAgD7BM,OAhD6B,GAgDnB,MAAMC,CAAN,IAAW;AACnBA,MAAAA,CAAC,CAACC,cAAF,GADmB,CAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,UAAIC,IAAI,GAAG,MAAM9B,KAAK,CAAC;AACrB+B,QAAAA,MAAM,EAAE,KADa;AAErBC,QAAAA,GAAG,EAAE,uDAFgB;AAGrBC,QAAAA,OAAO,EAAE;AACP,0BAAgB,0BADT;AAEP,6BAAmB,mCAFZ;AAGP,4BAAkB,oDAHX;AAIPC,UAAAA,cAAc,EAAE;AAJT,SAHY;AASrBC,QAAAA,MAAM,EAAE;AACN3B,UAAAA,MAAM,EAAE,KAAKH,KAAL,CAAWG,MADb;AAENF,UAAAA,MAAM,EAAE,KAAKD,KAAL,CAAWC,MAFb;AAGNC,UAAAA,MAAM,EAAE,KAAKF,KAAL,CAAWE;AAHb;AATa,OAAD,CAAtB;AAeA6B,MAAAA,OAAO,CAACC,GAAR,CAAYP,IAAI,CAACT,IAAjB;AACA,WAAKP,QAAL,CAAc;AACZJ,QAAAA,aAAa,EAAEoB,IAAI,CAACT,IADR;AAEZV,QAAAA,SAAS,EAAE;AAFC,OAAd;AAID,KAtF4B;AAAA;;AAwF7B2B,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEvB,MAAAA;AAAF,QAAiB,KAAKV,KAA5B;AACA,UAAMkC,gBAAgB,GAAG;AACvB,SAAG,OADoB;AAEvB,UAAI,QAFmB;AAGvB,WAAK;AAHkB,KAAzB;;AAMA,UAAMC,QAAQ,GAAG3B,KAAK,IAAIA,KAAK,GAAG,KAAlC;;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yWAFF,eAUE;AAAM,MAAA,SAAS,EAAC,OAAhB;AAAwB,MAAA,QAAQ,EAAE,KAAKc,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,EAAE,EAAC,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,MAAA,QAAQ,EAAE,KAAKX,YAAvB;AAAqC,MAAA,IAAI,EAAC,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,KAAK,EAAC,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAQ,MAAA,IAAI,EAAC,MAAb;AAAoB,MAAA,KAAK,EAAC,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,CAFF,CADF,eAYE;AAAK,MAAA,EAAE,EAAC,QAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,MAAA,EAAE,EAAC,SADL;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,GAAG,EAAC,KAHN;AAIE,MAAA,GAAG,EAAC,KAJN;AAKE,MAAA,IAAI,EAAC,QALP;AAME,MAAA,QAAQ,EAAE,KAAKA,YANjB;AAOE,MAAA,IAAI,EAAC,GAPP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAWG,KAAKX,KAAL,CAAWE,MAXd,QAZF,eAyBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAzBF,eA0BE;AACE,MAAA,WAAW,EAAC,KADd;AAEE,MAAA,QAAQ,EAAE,KAAKS,YAFjB;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,IAAI,EAAC,QAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1BF,eAgCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAhCF,eAiCE;AACE,MAAA,WAAW,EAAC,IADd;AAEE,MAAA,QAAQ,EAAE,KAAKA,YAFjB;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,IAAI,EAAC,KAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjCF,eAuCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvCF,eAwCE;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAA2B,MAAA,IAAI,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAxCF,CAVF,EAsDG,KAAKX,KAAL,CAAWM,SAAX,gBACC,oBAAC,aAAD;AACE,MAAA,IAAI,EAAE,KAAKS,aAAL,EADR;AAEE,MAAA,KAAK,EAAC,sBAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAMC,EA5DJ,eA8DE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CA9DF,eA+DE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDAFF,4CAFF,CA/DF,eAuEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDAFF,wLAFF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDAFF,wCAFF,CATF,eAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDADF,EACmD,GADnD,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDAFF,wCAFF,CAjBF,CAvEF,CADF;AAoGD;;AArM4B;;AAwM/B,eAAehB,MAAf","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport PerfectWeight from \"./weight\";\nimport Slider from \"react-rangeslider\";\n\nclass Health extends Component {\n  state = {\n    gender: \"\",\n    height: \"\",\n    weight: \"79\",\n    age: \"\",\n    perfectWeight: [],\n\n    showGraph: false\n  };\n  handleChangeHorizontal = value => {\n    this.setState({\n      horizontal: value\n    });\n  };\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n  getRatingData = () => {\n    let data = [\n      {\n        name: \"Devine\",\n        weight: this.state.perfectWeight?.Devine?.toFixed(1)\n      },\n      {\n        name: \"Hamwi\",\n\n        weight: this.state.perfectWeight?.Hamwi?.toFixed(1)\n      },\n      {\n        name: \"My weight\",\n        weight: this.state.weight\n      },\n      {\n        name: \"Miller\",\n\n        weight: this.state.perfectWeight?.Miller?.toFixed(1)\n      },\n      {\n        name: \"Robinson\",\n\n        weight: this.state.perfectWeight?.Robinson?.toFixed(1)\n      }\n    ];\n    return data;\n  };\n  getInfo = async e => {\n    e.preventDefault();\n    // let res1 = await axios({\n    //   method: \"GET\",\n    //   url: \"https://fitness-calculator.p.rapidapi.com/bmi\",\n    //   headers: {\n    //     \"content-type\": \"application/octet-stream\",\n    //     \"x-rapidapi-host\": \"fitness-calculator.p.rapidapi.com\",\n    //     \"x-rapidapi-key\": \"e14d7b4a61mshaf4d68517150093p1d2b11jsnaa5e4d29c6bc\",\n    //     useQueryString: true\n    //   },\n    //   params: {\n    //     age: this.state.age,\n    //     height: this.state.height,\n    //     weight: this.state.weight\n    //   }\n    // });\n\n    let res2 = await axios({\n      method: \"GET\",\n      url: \"https://fitness-calculator.p.rapidapi.com/idealweight\",\n      headers: {\n        \"content-type\": \"application/octet-stream\",\n        \"x-rapidapi-host\": \"fitness-calculator.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"e14d7b4a61mshaf4d68517150093p1d2b11jsnaa5e4d29c6bc\",\n        useQueryString: true\n      },\n      params: {\n        weight: this.state.weight,\n        gender: this.state.gender,\n        height: this.state.height\n      }\n    });\n    console.log(res2.data);\n    this.setState({\n      perfectWeight: res2.data,\n      showGraph: true\n    });\n  };\n\n  render() {\n    const { horizontal } = this.state;\n    const horizontalLabels = {\n      0: \"Short\",\n      50: \"Medium\",\n      100: \"Tall\"\n    };\n\n    const formatcm = value => value + \" cm\";\n    return (\n      <div>\n        <h1>Ideal Weight Calculator</h1>\n        <p>\n          If you are really concerned about your health or your looks and want\n          to know how much you should weigh, this ideal weight calculator is the\n          tool for you. It will help you determine your ideal body weight based\n          on your height and sex. Read on to learn the different formulas for\n          calculating your IBW (ideal body weight) and how to interpret the\n          results\n        </p>\n        <form className=\"form1\" onSubmit={this.getInfo}>\n          <div id=\"sex\">\n            <label>Gender</label>\n            <select onChange={this.handleChange} type=\"text\">\n              <option name=\"female\" value=\"female\">\n                Female\n              </option>\n              <option name=\"male\" value=\"male\">\n                Male\n              </option>\n            </select>\n          </div>\n          <div id=\"height\">\n            <label>Height</label>\n            <input\n              id=\"typeinp\"\n              type=\"range\"\n              min=\"100\"\n              max=\"250\"\n              name=\"height\"\n              onChange={this.handleChange}\n              step=\"1\"\n            />\n            {this.state.height} cm\n          </div>\n          <label>Weight in kg</label>\n          <input\n            placeholder=\"89 \"\n            onChange={this.handleChange}\n            type=\"text\"\n            name=\"weight\"\n          />\n          <label>Age</label>\n          <input\n            placeholder=\"25\"\n            onChange={this.handleChange}\n            type=\"text\"\n            name=\"age\"\n          />\n          <br />\n          <button className=\"submit\" type=\"submit\">\n            Calculate\n          </button>\n        </form>\n        {this.state.showGraph ? (\n          <PerfectWeight\n            data={this.getRatingData()}\n            title=\"Perfect weight in kg\"\n          />\n        ) : (\n          \"\"\n        )}\n        <h2>Formulas for Finding the Ideal Weight</h2>\n        <div>\n          <h3>G. J. Hamwi Formula (1964)</h3>\n          <p>\n            <p>Male: 48.0 kg + 2.7 kg per inch over 5 feet</p>\n            <p>Female: 45.5 kg + 2.2 kg per inch over 5 feet</p> Invented for\n            medicinal dosage purposes\n          </p>\n        </div>\n        <div>\n          <h3>B. J. Devine Formula (1974)</h3>\n          <p>\n            <p>Male: 50.0 kg + 2.3 kg per inch over 5 feet</p>\n            <p>Female: 45.5 kg + 2.3 kg per inch over 5 feet</p> Similar to the\n            Hamwi Formula, it was originally intended as a basis for medicinal\n            dosages based on weight and height. Over time, the formula became a\n            universal determinant of IBW\n          </p>\n          <div>\n            <h3>D. R. Miller Formula (1983)</h3>\n            <p>\n              <p>Male: 56.2 kg + 1.41 kg per inch over 5 feet</p>\n              <p>Female: 53.1 kg + 1.36 kg per inch over 5 feet</p> Modification\n              of the Devine Formula\n            </p>\n          </div>\n          <div>\n            <h3>J. D. Robinson Formula (1983)</h3>\n            <p>\n              <p>Male: 52 kg + 1.9 kg per inch over 5 feet</p>{\" \"}\n              <p>Female: 49 kg + 1.7 kg per inch over 5 feet</p> Modification of\n              the Devine Formula\n            </p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Health;\n"]},"metadata":{},"sourceType":"module"}