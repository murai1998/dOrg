{"ast":null,"code":"var _jsxFileName = \"/Users/thatchampion/Desktop/Ironhack/Project4/frontend/src/components/Socket.js\";\nimport io from \"socket.io-client\";\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport moment from \"moment\";\nconst username = this.props.user.user.email;\nconst socket = io(\"http://localhost:3000\", {\n  transports: [\"websocket\", \"polling\"]\n});\n\nconst Socket = ({}) => {\n  const [users, setUsers] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    socket.on(\"connect\", () => {\n      socket.emit(\"username\", username);\n    });\n    socket.on(\"users\", users => {\n      setUsers(users);\n    });\n    socket.on(\"message\", message => {\n      setMessages(messages => [...messages, message]);\n    });\n    socket.on(\"connected\", user => {\n      setUsers(users => [...users, user]);\n    });\n    socket.on(\"disconnected\", id => {\n      setUsers(users => {\n        return users.filter(user => user.id !== id);\n      });\n    });\n  }, []);\n\n  const submit = event => {\n    event.preventDefault();\n    socket.emit(\"send\", message);\n    setMessage(\"\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12 mt-4 mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, \"Hello \", username))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, \"Messages\"), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"messages\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, messages.map(({\n    user,\n    date,\n    text\n  }, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, moment(date).format(\"h:mm:ss a\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, user.name), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, text)))), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submit,\n    id: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    onChange: e => setMessage(e.currentTarget.value),\n    value: message,\n    id: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    id: \"submit\",\n    type: \"submit\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, \"Send\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, \"Users\"), /*#__PURE__*/React.createElement(\"ul\", {\n    id: \"users\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, users.map(({\n    name,\n    id\n  }) => /*#__PURE__*/React.createElement(\"li\", {\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, name))))));\n};\n\nexport default Socket;","map":{"version":3,"sources":["/Users/thatchampion/Desktop/Ironhack/Project4/frontend/src/components/Socket.js"],"names":["io","React","useEffect","useState","moment","username","props","user","email","socket","transports","Socket","users","setUsers","message","setMessage","messages","setMessages","on","emit","id","filter","submit","event","preventDefault","map","date","text","index","format","name","e","currentTarget","value"],"mappings":"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","sourcesContent":["import io from \"socket.io-client\";\n\nimport React from \"react\";\n\nimport { useEffect, useState } from \"react\";\nimport moment from \"moment\";\n\nconst username = this.props.user.user.email;\n\nconst socket = io(\"http://localhost:3000\", {\n  transports: [\"websocket\", \"polling\"]\n});\n\nconst Socket = ({}) => {\n  const [users, setUsers] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n\n  useEffect(() => {\n    socket.on(\"connect\", () => {\n      socket.emit(\"username\", username);\n    });\n\n    socket.on(\"users\", users => {\n      setUsers(users);\n    });\n\n    socket.on(\"message\", message => {\n      setMessages(messages => [...messages, message]);\n    });\n\n    socket.on(\"connected\", user => {\n      setUsers(users => [...users, user]);\n    });\n\n    socket.on(\"disconnected\", id => {\n      setUsers(users => {\n        return users.filter(user => user.id !== id);\n      });\n    });\n  }, []);\n\n  const submit = event => {\n    event.preventDefault();\n    socket.emit(\"send\", message);\n    setMessage(\"\");\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-md-12 mt-4 mb-4\">\n          <h6>Hello {username}</h6>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-md-8\">\n          <h6>Messages</h6>\n          <div id=\"messages\">\n            {messages.map(({ user, date, text }, index) => (\n              <div key={index} className=\"row mb-2\">\n                <div className=\"col-md-3\">\n                  {moment(date).format(\"h:mm:ss a\")}\n                </div>\n                <div className=\"col-md-2\">{user.name}</div>\n                <div className=\"col-md-2\">{text}</div>\n              </div>\n            ))}\n          </div>\n          <form onSubmit={submit} id=\"form\">\n            <div className=\"input-group\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                onChange={e => setMessage(e.currentTarget.value)}\n                value={message}\n                id=\"text\"\n              />\n              <span className=\"input-group-btn\">\n                <button id=\"submit\" type=\"submit\" className=\"btn btn-primary\">\n                  Send\n                </button>\n              </span>\n            </div>\n          </form>\n        </div>\n        <div className=\"col-md-4\">\n          <h6>Users</h6>\n          <ul id=\"users\">\n            {users.map(({ name, id }) => (\n              <li key={id}>{name}</li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Socket;\n"]},"metadata":{},"sourceType":"module"}