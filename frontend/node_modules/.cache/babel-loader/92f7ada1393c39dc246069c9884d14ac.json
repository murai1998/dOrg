{"ast":null,"code":"var _jsxFileName = \"/Users/thatchampion/Desktop/Ironhack/Project4/frontend/src/components/create-exersice.js\";\nimport React, { Component } from \"react\";\nimport Navbar from \"./navbar\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from \"axios\";\nimport actions from \"../services/index\";\nimport CreatableSelect from \"react-select/creatable\";\nimport Select from \"react-select\";\nimport exs from \"../components/mets/mets.json\";\nimport { getWeekYearWithOptions } from \"date-fns/fp\";\nimport { Circle } from \"rc-progress\";\nconst circleContainerStyle = {\n  width: \"250px\",\n  height: \"250px\",\n  display: \"inline-block\"\n};\nlet options = [];\nlet options2 = [];\nlet options3 = [];\nlet arr = {};\nlet keys = Object.entries(exs);\nlet keys2 = [];\n\nclass CreateExercise extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user: { ...this.props.user\n      },\n      username: this.props.user.email,\n      description: \"\",\n      description2: \"\",\n      duration: 0,\n      date: new Date(),\n      users: [],\n      list: [],\n      met: \"\",\n      custom: true,\n      selected: \"\"\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleDate = date => {\n      this.setState({\n        date: date\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      let exercise = { ...this.state\n      };\n      actions.createExs(exercise).then(res => {\n        console.log(res.data);\n      }); // window.location = \"/\";\n\n      console.log(\"Exercise:\", exercise);\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 12\n        }\n      }, \"You have added a new exercise\");\n    };\n\n    this.handleChange2 = (newValue, actionMeta) => {\n      console.group(\"Value Changed\");\n      console.log(newValue);\n      console.log(`action: ${actionMeta.action}`);\n      console.groupEnd();\n      this.setState({\n        description2: newValue.value\n      });\n    };\n\n    this.handleChange3 = (newValue, actionMeta) => {\n      console.group(\"Value Changed\");\n      console.log(newValue);\n      console.log(`action: ${actionMeta.action}`);\n      console.groupEnd();\n      this.setState({\n        description: newValue.value,\n        met: newValue.met\n      });\n    };\n\n    this.handleInputChange = (inputValue, actionMeta) => {\n      console.group(\"Input Changed\");\n      console.log(inputValue);\n      console.log(`action: ${actionMeta.action}`);\n      console.groupEnd();\n    };\n  }\n\n  async componentDidMount() {\n    let res = await actions.list(); // let res2 = await axios({\n    //   method: \"GET\",\n    //   url: \"https://fitness-calculator.p.rapidapi.com/mets\",\n    //   headers: {\n    //     \"content-type\": \"application/octet-stream\",\n    //     \"x-rapidapi-host\": \"fitness-calculator.p.rapidapi.com\",\n    //     \"x-rapidapi-key\": \"e14d7b4a61mshaf4d68517150093p1d2b11jsnaa5e4d29c6bc\",\n    //     useQueryString: true\n    //   }\n    // });\n\n    console.log(\"RESSSSS\", exs);\n    this.setState({\n      list: res.data\n    });\n  }\n\n  render() {\n    console.log(\"MET\", this.state.met);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }, \"Physical activity has a large effect on total human energy expenditure, and contributes 20-30% to the body's total energy output. The amount of energy expended for different activities will vary with the intensity and type of exercise. For each person, the range for total daily energy expenditure is highly variable, it depends on many factors, including: activity level, age, gender, size, weight and body composition.\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }\n    }, \"One of the easiest methods for recording of the intensity of a physical activity is the Metabolic Equivalent Task (MET) method. The energy cost of many activities has been determined, usually by monitoring the oxygen consumption during the activity, to determine an average oxygen uptake per unit of time. This value is then compared to the resting oxygen uptake.\"), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }\n    }, \"Let us help you to calculate how many calories you burn doing various physical tasks.\", \" \"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }\n    }, \"Enter your weight, then describe the duration and intensity of each activity\"), \"CreateExercise\", /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }\n    }, \"Description:\"), this.state.list.map(item => {\n      options.push({\n        value: item.description,\n        label: item.description\n      });\n    }), console.log(keys), keys.filter(item => {\n      {\n        options2.push({\n          value: item[0],\n          label: item[0]\n        });\n      }\n    }), /*#__PURE__*/React.createElement(CreatableSelect, {\n      isClearable: true,\n      onChange: this.handleChange2,\n      onInputChange: this.handleInputChange,\n      options: options2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }\n    }), keys.filter(item => {\n      if (item[0] == this.state.description2) arr = item[1];\n    }), options2 = [], Object.values(arr).filter(item => {\n      {\n        options3.push({\n          value: item.specific,\n          label: item.specific,\n          met: item.MET\n        });\n      }\n    }), console.log(\"Arr\", Object.values(arr)), /*#__PURE__*/React.createElement(CreatableSelect, {\n      isClearable: true,\n      onChange: this.handleChange3,\n      onInputChange: this.handleInputChange,\n      options: options3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 13\n      }\n    }), options3 = []), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 13\n      }\n    }, \"Duration in minutes\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      name: \"duration\",\n      required: true,\n      className: \"form-control\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 13\n      }\n    }, \"Your weight\"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"typeinp\",\n      type: \"range\",\n      min: \"20\",\n      max: \"150\",\n      name: \"weight\",\n      onChange: this.handleChange,\n      step: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 13\n      }\n    }), this.state.weight, \" kg\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 13\n      }\n    }, \"Date\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(DatePicker, {\n      selected: this.state.date,\n      onSelect: this.handleDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Create\",\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      style: circleContainerStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Circle, {\n      percent: 90,\n      strokeWidth: \"6\",\n      strokeLinecap: \"round\",\n      strokeColor: {\n        \"0%\": \"#108ee9\",\n        \"100%\": \"#87d068\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default CreateExercise;","map":{"version":3,"sources":["/Users/thatchampion/Desktop/Ironhack/Project4/frontend/src/components/create-exersice.js"],"names":["React","Component","Navbar","DatePicker","axios","actions","CreatableSelect","Select","exs","getWeekYearWithOptions","Circle","circleContainerStyle","width","height","display","options","options2","options3","arr","keys","Object","entries","keys2","CreateExercise","state","user","props","username","email","description","description2","duration","date","Date","users","list","met","custom","selected","handleChange","e","setState","target","name","value","handleDate","handleSubmit","preventDefault","exercise","createExs","then","res","console","log","data","handleChange2","newValue","actionMeta","group","action","groupEnd","handleChange3","handleInputChange","inputValue","componentDidMount","render","map","item","push","label","filter","values","specific","MET","weight"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Navbar from \"./navbar\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from \"axios\";\nimport actions from \"../services/index\";\nimport CreatableSelect from \"react-select/creatable\";\nimport Select from \"react-select\";\nimport exs from \"../components/mets/mets.json\";\nimport { getWeekYearWithOptions } from \"date-fns/fp\";\nimport { Circle } from \"rc-progress\";\nconst circleContainerStyle = {\n  width: \"250px\",\n  height: \"250px\",\n  display: \"inline-block\"\n};\n\nlet options = [];\nlet options2 = [];\nlet options3 = [];\nlet arr = {};\nlet keys = Object.entries(exs);\nlet keys2 = [];\n\nclass CreateExercise extends Component {\n  state = {\n    user: { ...this.props.user },\n    username: this.props.user.email,\n    description: \"\",\n    description2: \"\",\n    duration: 0,\n    date: new Date(),\n    users: [],\n    list: [],\n    met: \"\",\n    custom: true,\n    selected: \"\"\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n  async componentDidMount() {\n    let res = await actions.list();\n    // let res2 = await axios({\n    //   method: \"GET\",\n    //   url: \"https://fitness-calculator.p.rapidapi.com/mets\",\n    //   headers: {\n    //     \"content-type\": \"application/octet-stream\",\n    //     \"x-rapidapi-host\": \"fitness-calculator.p.rapidapi.com\",\n    //     \"x-rapidapi-key\": \"e14d7b4a61mshaf4d68517150093p1d2b11jsnaa5e4d29c6bc\",\n    //     useQueryString: true\n    //   }\n    // });\n    console.log(\"RESSSSS\", exs);\n\n    this.setState({\n      list: res.data\n    });\n  }\n  handleDate = date => {\n    this.setState({\n      date: date\n    });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    let exercise = { ...this.state };\n    actions.createExs(exercise).then(res => {\n      console.log(res.data);\n    });\n    // window.location = \"/\";\n    console.log(\"Exercise:\", exercise);\n    return <p>You have added a new exercise</p>;\n  };\n\n  handleChange2 = (newValue: any, actionMeta: any) => {\n    console.group(\"Value Changed\");\n    console.log(newValue);\n    console.log(`action: ${actionMeta.action}`);\n    console.groupEnd();\n    this.setState({\n      description2: newValue.value\n    });\n  };\n  handleChange3 = (newValue: any, actionMeta: any) => {\n    console.group(\"Value Changed\");\n    console.log(newValue);\n    console.log(`action: ${actionMeta.action}`);\n    console.groupEnd();\n    this.setState({\n      description: newValue.value,\n      met: newValue.met\n    });\n  };\n  handleInputChange = (inputValue: any, actionMeta: any) => {\n    console.group(\"Input Changed\");\n    console.log(inputValue);\n    console.log(`action: ${actionMeta.action}`);\n    console.groupEnd();\n  };\n  render() {\n    console.log(\"MET\", this.state.met);\n    return (\n      <div>\n        <Navbar />\n        <p>\n          Physical activity has a large effect on total human energy\n          expenditure, and contributes 20-30% to the body's total energy output.\n          The amount of energy expended for different activities will vary with\n          the intensity and type of exercise. For each person, the range for\n          total daily energy expenditure is highly variable, it depends on many\n          factors, including: activity level, age, gender, size, weight and body\n          composition.\n        </p>\n        <p>\n          One of the easiest methods for recording of the intensity of a\n          physical activity is the Metabolic Equivalent Task (MET) method. The\n          energy cost of many activities has been determined, usually by\n          monitoring the oxygen consumption during the activity, to determine an\n          average oxygen uptake per unit of time. This value is then compared to\n          the resting oxygen uptake.\n        </p>\n        <h4>\n          Let us help you to calculate how many calories you burn doing various\n          physical tasks.{\" \"}\n        </h4>\n        <p>\n          Enter your weight, then describe the duration and intensity of each\n          activity\n        </p>\n        CreateExercise\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"form-group\">\n            <label>Description:</label>\n            {this.state.list.map(item => {\n              options.push({\n                value: item.description,\n                label: item.description\n              });\n            })}\n            {console.log(keys)}\n            {keys.filter(item => {\n              {\n                options2.push({\n                  value: item[0],\n                  label: item[0]\n                });\n              }\n            })}\n\n            <CreatableSelect\n              isClearable\n              onChange={this.handleChange2}\n              onInputChange={this.handleInputChange}\n              options={options2}\n            />\n\n            {keys.filter(item => {\n              if (item[0] == this.state.description2) arr = item[1];\n            })}\n            {(options2 = [])}\n\n            {Object.values(arr).filter(item => {\n              {\n                options3.push({\n                  value: item.specific,\n                  label: item.specific,\n                  met: item.MET\n                });\n              }\n            })}\n            {console.log(\"Arr\", Object.values(arr))}\n            <CreatableSelect\n              isClearable\n              onChange={this.handleChange3}\n              onInputChange={this.handleInputChange}\n              options={options3}\n            />\n            {(options3 = [])}\n          </div>\n          <div className=\"form-group\">\n            <label>Duration in minutes</label>\n            <input\n              type=\"number\"\n              name=\"duration\"\n              required\n              className=\"form-control\"\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label>Your weight</label>\n            <input\n              id=\"typeinp\"\n              type=\"range\"\n              min=\"20\"\n              max=\"150\"\n              name=\"weight\"\n              onChange={this.handleChange}\n              step=\"1\"\n            />\n            {this.state.weight} kg\n          </div>\n          <div className=\"form-group\">\n            <label>Date</label>\n            <div>\n              <DatePicker\n                selected={this.state.date}\n                onSelect={this.handleDate}\n              />\n            </div>\n          </div>\n          <div className=\"form-group\">\n            <input type=\"submit\" value=\"Create\" className=\"btn btn-primary\" />\n          </div>\n        </form>\n        <div style={circleContainerStyle}>\n          <Circle\n            percent={90}\n            strokeWidth=\"6\"\n            strokeLinecap=\"round\"\n            strokeColor={{\n              \"0%\": \"#108ee9\",\n              \"100%\": \"#87d068\"\n            }}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CreateExercise;\n"]},"metadata":{},"sourceType":"module"}